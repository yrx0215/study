<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.dreamteam.mapper.CourseMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="Course" type="com.jnshu.dreamteam.pojo.Course">
        <id column="id" property="id" />
        <result column="course_name" property="courseName" />
        <result column="course_level" property="courseLevel" />
        <result column="study_number" property="studyNumber" />
        <result column="course_status" property="courseStatus" />
        <result column="course_pic" property="coursePic" />
        <result column="course_introduction" property="courseIntroduction" />
        <result column="subject_id" property="subjectId" />
        <result column="subject_name" property="subjectName"/>
        <result column="create_at" property="createAt" />
        <result column="update_at" property="updateAt" />
        <result column="grade" property="grade"/>
    </resultMap>
    
    <!--public List<Course> selectAllCourse();-->
    <select id="selectAllCourse" resultType="com.jnshu.dreamteam.pojo.Course">
        select *
        FROM course
        order by update_at DESC
    </select>

    <!--public Long addCourse(Course course);-->
    <insert id="addCourse" parameterType="com.jnshu.dreamteam.pojo.Course" keyProperty="id" useGeneratedKeys="true">
        INSERT  into course(course_name,course_level,course_pic,course_introduction,subject_id,subject_name, create_at)
        VALUES  (#{courseName},#{courseLevel},#{coursePic},#{courseIntroduction},#{subjectId},#{subjectName},#{createAt})
    </insert>

    <!--public Course selectCourseById(Long id);-->
    <select id="selectCourseById" resultMap="Course">
        SELECT c.*,s.grade
        FROM course c , subject s
        WHERE  c.subject_id = s.id and c.id = #{id}
    </select>

    <!--public Boolean updateCourse(Course course);-->
    <update id="updateCourse" >
      UPDATE course
      <set>
          <if test="courseName != null and courseName.trim() != ''">
            course_name = #{courseName},
          </if>
          <if test="courseLevel != null">
            course_level = #{courseLevel},
          </if>
          <if test="coursePic != null and coursePic.trim() != ''">
            course_pic = #{coursePic},
          </if>
          <if test="courseIntroduction != null and courseIntroduction.trim() != ''">
            course_introduction = #{courseIntroduction},
          </if>
          <if test="studyNumber != null">
              study_number = #{studyNumber},
          </if>
          update_at = #{updateAt}
      </set>
        where id = #{id}
    </update>

    <!-- public List<Course> selectCourseByFuzzy();-->
<!--SELECT subject_id ,subject_name,  course_name, course_level, course_pic, course_introduction-->
    <select id="selectCourseByFuzzy" resultMap="Course">
      SELECT *
      FROM course
      <where>
          <if test="subjectName != null and subjectName.trim() != ''">
            and subject_name = #{subjectName}
          </if>
          <if test="courseStatus == 0 or courseStatus == 1">
              and course_status = #{courseStatus}
          </if>
          <if test="courseLevel != null ">
              and course_level = #{courseLevel}
          </if>
          <if test="courseName != null and courseName.trim() != ''">
              and course_name like concat(concat('%',#{courseName},'%'))
          </if>
      </where>
        order by update_at desc
    </select>
<!--like concat(concat('%',#{courseName}),'%')-->

    <!-- Boolean updateCourseStatus();-->
    <update id="updateCourseStatus">
        UPDATE course
        SET course_status = #{courseStatus}, update_at = #{updateAt}
        where id = #{id}

    </update>

    <!-- Boolean deleteCourse(Long id);-->
    <delete id="deleteCourse">
      DELETE
      FROM course
      where id = #{id}
    </delete>


<!--selectIdBySubejctIdAndCourseName-->
    <select id="selectIdBySubejctIdAndCourseName" resultType="java.lang.Long">
      SELECT id
      from course
      where subject_id = #{subjectId} and course_name = #{courseName}
    </select>


    <select id="selectByStudentId" resultMap="Course">
        SELECT c.id,c.course_name,c.subject_name,c.course_level,c.study_number,c.course_status
        FROM course AS c INNER JOIN student_course AS sc ON c.id=sc.course_id
        WHERE sc.student_id =#{studentId}
    </select>

    <select id="selectCourseName" resultMap="Course">
        select DISTINCT course_name from course
        where subject_id = #{subjectId}
    </select>
    
    <select id="selectCourseIdBySubjectIdAndCourseLevel" resultMap="Course">
        select id, course_name
        from course
        where subject_id = #{subjectId} and course_level = #{courseLevel}
    </select>

    <select id="selectCourseNameBySubjectId" resultType="java.lang.String">
        select course_name
        from course
        WHERE subject_id = #{subjectId}
    </select>

    <!--前台,新增学生和课程关系表中数据-->
    <insert id="inserStudentAndCourse">
        INSERT into student_course(student_id, course_id)
        VALUES (#{studentId},#{courseId})
    </insert>

    <!--前台, 收藏课程, 查询关系表中是否有, 在修改数据-->
    <select id="selectStudentAndCourse" resultType="long">
      select *
      from student_course
      where student_id = #{studentId}
    </select>

    <update id="updateStudentAndCourse">
      update student_course
      <set>
          <if test="status != null">
            status = #{status},
          </if>
          <if test="collection != null">
              collection = #{collection}
          </if>
      </set>
        where student_id = #{studentId} and course_id = #{courseId}
    </update>

    <!--前台, 根据关系表, 查询学习人数, 更新-->
    <select id="selectStudentNumber" resultType="integer">
        select COUNT(student_id)
        from student_course
        WHERE course_id = #{courseId}
    </select>
</mapper>
